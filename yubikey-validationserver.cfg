# yubikey-validationserver.cfg
#
# This configuration sample will allow you to get started with Yubikey
# (yubico.com) authentication where Yubikey one-time-passwords are
# authenticated against a Yubikey Validation server.
#
# Radiator supports YK-VAL and PyHSM validation servers. See below for
# more information:
#
# YK-VAL and YubiCloud:
# Yubico's Validation Server (YK-VAL) and YubiCloud API versions 1.0
# and 2.0 are supported.
#
# For YubiCloud you should set APIVersion to 2.0 and ClientID to value
# assigned by Yubico. Configuring APIKey is optional but recommended
# especially when ValidationServerURL uses http.
#
# If you run self hosted YK-VAL, set APIVersion, ClientID and APIKey
# to match the server configuration.
#
# For download and more information, visit:
# https://developers.yubico.com/yubikey-val/
#
# PyHSM validation server:
# Yubico's PyHSM validation server yhsm-val supports Yubico OTP,
# OATH-HOTP and OATH-TOTP. You can start this validation server and
# enable short-otp and hotp like this:
#
# yhsm-validation-server --short-otp --hotp --db-file database.db --debug --hmac-kh <key index> --hotp-window 20
#
# Radiator supports both --short-otp and --otp formats. If your server
# runs with --short-otp, set APIVersion to yk-ksm.
#
# For download and for more information, visit
# https://developers.yubico.com/python-pyhsm/
#
# Pre-requirements and other notes:
# Requires libwww-perl. HTTPS support requires libwww-perl 6.00 or
# later. Depending on your Perl installation, these may be packaged
# separately as Perl modules LWP::UserAgent. HTTPS support requires
# LWP::Protocol::https
#
# Supports authentication by RADIUS PAP. If you don't use 2 factor
# authentication then you can enable also EAP-GTC and EAP-OTP
#
# We suggest you start simple, prove to yourself that it works and
# then develop a more complicated configuration if necessary.
#
# See radius.cfg for more complete examples of features and syntax,
# and refer to the reference manual for a complete description of all
# the features and syntax.
#
# You should consider this file to be a starting point only
# $Id$

LogMicroseconds

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
</Client>

<Handler>
	AuthByPolicy ContinueWhileAccept

        # Here we adjust the decoded password so that AuthBy FILE only
        # sees the password part of decoded password. TokenID and OTP
        # are saved in attributes X-OSC-TokenID and X-OSC-OTP
        <AuthBy INTERNAL>
                DefaultResult ACCEPT
                AuthHook sub { \
		  my $submitted_pw = $_[0]->decodedPassword(); \

		  # If 2 factor authentication is used, static
		  # password must come before the token. TokenId is
		  # assumed to be 12 bytes long. Yubico's own
		  # tokencode is 32 bytes long.
                  my ($password, $tokenid, $otp) = $submitted_pw =~ /^(.*)([cbdefghijklnrtuv]{12})([cbdefghijklnrtuv]{32})$/; \

		  # If we didn't manage to parse submitted_pw lets's
                  # check if HOTP token is used. OATH-ID (TokenId) is
                  # 12 bytes long. OATH-HOTP codes can be 6 or 8 bytes
		  ($password, $tokenid, $otp) = $submitted_pw =~ /^(.*)([cbdefghijklnrtuv]{12})([0-9]{6})$/ unless defined $otp; \

                  # If we couldn't parse submitted_pw, send Access-Reject
    	          return ($main::REJECT, "Unable to parse token information") unless defined $otp; \

                  $_[0]->{DecodedPassword} = $password; \
		  $_[0]->add_attr('X-OSC-TokenID', $tokenid); \
		  $_[0]->add_attr('X-OSC-OTP', $otp); \
                  return ($main::ACCEPT);}
        </AuthBy>

        # Now authenticate the first part of the submitted password
        # from the users file. First part can also if the user has
        # correct token. Here's an example:
	#
        # mikem  User-Password = "fred", X-OSC-TokenID = "cccccccccccb"
        <AuthBy FILE>
                Filename %D/users
        </AuthBy>

        # Now we readjust the decoded password so that AuthBy
        # YUBIKEYVALIDATIONSERVER only sees the TokenID and OTP from
        # the original password
	<AuthBy INTERNAL>
                DefaultResult ACCEPT
                AuthHook sub { \
                  $_[0]->{DecodedPassword} =  $_[0]->get_attr('X-OSC-TokenID') . $_[0]->get_attr('X-OSC-OTP'); \
                  return ($main::ACCEPT);}
        </AuthBy>

        # Now authenticate the rest of the submitted password as a
        # Yubikey tokencode. If just single factor authentication is
        # required, you can remove the previous 3 AuthBys, leaving
        # just the AuthBy YUBIKEYVALIDATIONSERVER
	<AuthBy YUBIKEYVALIDATIONSERVER>
		# With this example configuration only PAP is
		# supported. If you don't use 2 factor authentication
		# then you can also enable EAP-GTC and/or EAP-OTP
		# EAPType GTC OTP

		# Protocols to allow. OATH protocols OATH-HOTP and
		# OATH-TOTP are only supported by PyHSM validation
		# server.
		OTPProtocol YubicoOTP

		# APIVersion defaults to yk-ksm which requires PyHSM
		# validation server that runs with --short-otp
		# parameter. Otherwise use 2.0 if possible
		APIVersion 2.0

		# Protocol (YbicoOTP, OATH-HOTP or OATH-TOTP) specific
		# part and password will be appended to the
		# ValidationServerURL.
		#ValidationServerURL http://127.0.0.1:8003/yhsm/validate?
		ValidationServerURL http://api.yubico.com/wsapi/2.0/verify?

		# ClientID is required for signed requests and
		# responses. Yubico allocates this for YubiCloud users
		# and seems to be require it when using YubiCloud
		# validation servers.
		#ClientID 1

		# APIKey is required for signing requests and
		# responses. It is allocated for a ClientID and
		# specified in Base64 format. When this parameter is
		# non-empty, requests are signed and valid signature
		# is required in responses.
		#APIKey t2ZMtKeValdA+H0jVpj3LIichn4=

		# Connection timeout in seconds. Defaults to 3.
		#Timeout 10

		# OTPCharset allows limiting and changing the
		# characters allowed in OTPs. Defaults to
		# 0-9cbdefghijklnrtuv which allows OATH and Yubico
		# OTPs.The following allows Yubico OTPs only.
		#OTPCharset cbdefghijklnrtuv

		# yhsm-validation-server doesn't currently support
		# SSL. You can enable SSL if your chosen server
		# supports SSL or you have a SSL proxy. Requires
		# libwww-perl 6.00 or later.
		#SSLVerify require
		#SSLCAFile %D/Go_Daddy_Root_Certificate_Authority_-_G2.pem
		#SSLCAPath /etc/ssl/certs
	</AuthBy>
</Handler>
